server {
  listen 80;
  server_name _;

  root /usr/share/nginx/html;
  index index.html;

  # Ensure trailing slash on the home directory path (e.g., /parse -> /parse/)
  location = ${HOME_DIRECTORY} {
    return 301 ${HOME_DIRECTORY}/;
  }

  # Serve SPA under the HOME_DIRECTORY prefix
  location ${HOME_DIRECTORY}/ {
    alias /usr/share/nginx/html/;
    try_files $uri $uri/ /index.html;
  }

  # Proxy backend auth endpoints to Flask
  location = ${HOME_DIRECTORY}/azure_login {
    proxy_pass http://server:5000${HOME_DIRECTORY}/azure_login;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
  }
  location = ${HOME_DIRECTORY}/authorized {
    proxy_pass http://server:5000${HOME_DIRECTORY}/authorized;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
  }
  location = ${HOME_DIRECTORY}/logout {
    proxy_pass http://server:5000${HOME_DIRECTORY}/logout;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
  }

  # Proxy API requests keeping the prefix so Flask sees it
  location ${HOME_DIRECTORY}/api/ {
    proxy_pass http://server:5000;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
    proxy_buffering off;
  }

  # All non-API routes are served by the SPA (MSAL redirects land here too)
}
